export default {
  // 菜单国际化
  route: {
    dashboard: "Dashboard",
    document: "Document",
    profile: "User Profile",
    myNotice: "My Notifications",
  },
  // 登录页面国际化
  login: {
    themeToggle: "Theme Switch",
    languageToggle: "Language Switch",
    dark: "Dark",
    light: "Light",
    username: "Username",
    password: "Password",
    login: "Login",
    captchaCode: "Verify Code",
    capsLock: "Caps Lock is On",
    rememberMe: "Remember Me",
    forgetPassword: "Forget Password?",
    message: {
      username: {
        required: "Please enter Username",
      },
      password: {
        required: "Please enter Password",
        min: "The password can not be less than 6 digits",
        confirm: "Please confirm the password again",
        inconformity: "The two password entries are inconsistent",
      },
      captchaCode: {
        required: "Please enter Verify Code",
      },
    },
    otherLoginMethods: "Other",
    resetPassword: "Reset password",
    thinkOfPasswd: "Remember your password?",
    register: "Register account",
    agree: "I have read and agree to the",
    userAgreement: "User Agreement",
    haveAccount: "Already have an account?",
    noAccount: "Don't have an account?",
    quickFill: "Quick fill",
    reg: "Register",
  },
  // 導航欄國際化
  navbar: {
    dashboard: "Dashboard",
    logout: "Logout",
    document: "Document",
    gitee: "Gitee",
    profile: "User Profile",
    logoutConfirm: "Are you sure you want to logout and exit the system?",
    logoutConfirmTitle: "Confirm Logout",
  },
  sizeSelect: {
    tooltip: "Layout Size",
    default: "Default",
    large: "Large",
    small: "Small",
    message: {
      success: "Switch Layout Size Successful!",
    },
  },
  langSelect: {
    message: {
      success: "Switch Language Successful!",
    },
  },
  settings: {
    project: "Project Settings",
    theme: "Theme",
    interface: "Interface",
    navigation: "Navigation",
    themeColor: "Theme Color",
    showTagsView: "Show Tags View",
    showAppLogo: "Show App Logo",
    sidebarColorScheme: "Sidebar Color Scheme",
    showWatermark: "Show Watermark",
    classicBlue: "Classic Blue",
    minimalWhite: "Minimal White",
    copyConfig: "Copy Config",
    resetConfig: "Reset Default",
    copySuccess: "Configuration copied to clipboard",
    resetSuccess: "Reset to default configuration",
    copyDescription:
      "Copy config will generate current settings code, reset will restore all settings to default",
    confirmReset: "Are you sure to reset all settings to default? This operation cannot be undone.",
    applyToFile: "Apply to File",
    onlyCopy: "Only Copy",
    leftLayout: "Left Mode",
    topLayout: "Top Mode",
    mixLayout: "Mix Mode",
    configManagement: "Config Management",
    copyConfigDescription:
      "Generate current settings code and copy to clipboard, then overwrite src/settings.ts file",
    resetConfigDescription: "Restore all settings to system default values",
  },
  // User Management Internationalization
  user: {
    title: "User Management",
    keywords: "Keywords",
    keywordsPlaceholder: "Username/Nickname/Mobile",
    status: "Status",
    statusAll: "All",
    statusNormal: "Normal",
    statusDisabled: "Disabled",
    createTime: "Create Time",
    startTime: "Start Time",
    endTime: "End Time",
    search: "Search",
    reset: "Reset",
    add: "Add",
    delete: "Delete",
    import: "Import",
    export: "Export",
    username: "Username",
    nickname: "Nickname",
    gender: "Gender",
    department: "Department",
    mobile: "Mobile",
    email: "Email",
    operation: "Operation",
    resetPassword: "Reset Password",
    edit: "Edit",
    userForm: {
      title: {
        add: "Add User",
        edit: "Edit User",
      },
      username: "Username",
      usernamePlaceholder: "Please enter username",
      nickname: "Nickname",
      nicknamePlaceholder: "Please enter nickname",
      department: "Department",
      departmentPlaceholder: "Please select department",
      gender: "Gender",
      role: "Role",
      rolePlaceholder: "Please select",
      mobile: "Mobile",
      mobilePlaceholder: "Please enter mobile number",
      email: "Email",
      emailPlaceholder: "Please enter email",
      status: "Status",
      confirm: "Confirm",
      cancel: "Cancel",
    },
    validation: {
      usernameRequired: "Username is required",
      nicknameRequired: "Nickname is required",
      deptRequired: "Department is required",
      roleRequired: "Role is required",
      emailInvalid: "Please enter a valid email address",
      mobileInvalid: "Please enter a valid mobile number",
    },
    debug: {
      enable: "Enable Debug",
      disable: "Disable Debug",
      role: "Role",
      permission: "Permission",
      permissions: "permissions",
      none: "none",
    },
  },
  // Role Management Internationalization
  role: {
    title: "Role Management",
    keywords: "Keywords",
    roleName: "Role Name",
    roleNamePlaceholder: "Role Name",
    roleCode: "Role Code",
    roleCodePlaceholder: "Please enter role code",
    sort: "Sort",
    sortPlaceholder: "Please enter sort",
    dataScope: "Data Scope",
    form: {
      title: {
        add: "Add Role",
        edit: "Edit Role",
      },
      name: "Role Name",
      namePlaceholder: "Please enter role name",
      code: "Role Code",
      codePlaceholder: "Please enter role code",
      sort: "Sort",
      sortPlaceholder: "Please enter sort",
      status: "Status",
      dataScope: "Data Scope",
      remark: "Remark",
      remarkPlaceholder: "Please enter remark",
      menuPermission: "Menu Permission",
    },
    dataScopeOptions: {
      all: "All Data",
      deptAndSub: "Department and Sub-department Data",
      dept: "Department Data",
      self: "Personal Data",
    },
    assignPermission: "Assign Permission",
    validation: {
      nameRequired: "Role name is required",
      codeRequired: "Role code is required",
    },
  },
  // Notice Management Internationalization
  notice: {
    title: "Notice Management",
    noticeTitle: "Title",
    noticeTitlePlaceholder: "Title",
    publishStatus: "Publish Status",
    publishStatusAll: "All",
    publishStatusUnpublished: "Unpublished",
    publishStatusPublished: "Published",
    publishStatusWithdrawn: "Withdrawn",
    addNotice: "Add Notice",
    type: "Type",
    level: "Level",
    publishTime: "Publish Time",
    targetUser: "Target User",
    form: {
      title: {
        add: "Add Notice",
        edit: "Edit Notice",
      },
      noticeTitle: "Notice Title",
      titlePlaceholder: "Please enter notice title",
      type: "Notice Type",
      level: "Notice Level",
      targetUserType: "Target User",
      content: "Notice Content",
      contentPlaceholder: "Please enter notice content",
    },
    validation: {
      titleRequired: "Notice title is required",
      typeRequired: "Notice type is required",
      levelRequired: "Notice level is required",
      contentRequired: "Notice content is required",
    },
  },
  // Menu Management Internationalization
  menu: {
    title: "Menu Management",
    keywords: "Keywords",
    menuName: "Menu Name",
    menuNamePlaceholder: "Menu Name",
    menuType: "Menu Type",
    parentMenu: "Parent Menu",
    component: "Component Path",
    path: "Route Path",
    perms: "Permission",
    visible: "Visible",
    redirect: "Redirect",
    sort: "Sort",
    icon: "Icon",
    form: {
      title: "Add Menu",
      editTitle: "Edit Menu",
      name: "Menu Name",
      namePlaceholder: "Please enter menu name",
      parentId: "Parent Menu",
      parentPlaceholder: "Select parent menu",
      menuType: "Menu Type",
      extLinkPath: "External Link",
      extLinkPlaceholder: "Please enter external link URL",
      routeName: "Route Name",
      routeNamePlaceholder: "User",
      routeNameTooltip:
        "If caching is needed, ensure the page defineOptions name matches this field, use camelCase.",
      routePath: "Route Path",
      directoryPlaceholder: "system",
      menuPlaceholder: "user",
      routePathTooltip:
        "Define URL paths for different pages. Directories need to start with /, menu items don't. Example: System directory /system, User menu under system management is user.",
      component: "Component Path",
      componentPlaceholder: "system/user/index",
      componentTooltip:
        "Complete component page path relative to src/views/, e.g. system/user/index, default suffix .vue",
      routeParams: "Route Parameters",
      routeParamsTooltip:
        "Component pages use `useRoute().query.paramName` to get route parameter values.",
      addRouteParam: "Add Route Parameter",
      paramName: "Parameter Name",
      paramValue: "Parameter Value",
      visible: "Visible Status",
      alwaysShow: "Always Show",
      alwaysShowTooltip:
        "Select 'Yes' to show parent node even if directory or menu has only one child. Select 'No' to show only the child node and hide parent if there's only one child. For leaf nodes, select 'No'.",
      keepAlive: "Keep Alive",
      sort: "Sort",
      permission: "Permission",
      permissionPlaceholder: "sys:user:add",
      icon: "Icon",
      redirect: "Redirect",
      redirectPlaceholder: "Redirect path",
      path: "Route Path",
      pathPlaceholder: "Please enter route path",
      perms: "Permission",
      permsPlaceholder: "Please enter permission",
      sortPlaceholder: "Please enter sort",
      iconPlaceholder: "Please select icon",
    },
    menuTypes: {
      directory: "Directory",
      menu: "Menu",
      button: "Button",
      extlink: "External Link",
    },
    visibleStatus: {
      show: "Show",
      hide: "Hide",
    },
    options: {
      yes: "Yes",
      no: "No",
      enable: "Enable",
      disable: "Disable",
    },
    validation: {
      parentRequired: "Please select parent menu",
      nameRequired: "Menu name is required",
      typeRequired: "Please select menu type",
      routeNameRequired: "Please enter route name",
      pathRequired: "Route path is required",
      componentRequired: "Component path is required",
      visibleRequired: "Please select visible status",
      permsRequired: "Permission is required",
    },
  },
  // Profile Internationalization
  profile: {
    title: "User Profile",
    accountInfo: "Account Information",
    securitySettings: "Security Settings",
    personalInfo: "Personal Information",
    avatar: "Avatar",
    nickname: "Nickname",
    username: "Username",
    mobile: "Mobile",
    email: "Email",
    department: "Community",
    createTime: "Create Time",
    gender: "Gender",
    role: "Role",

    // Statistics
    stats: {
      todos: "Todos",
      messages: "Messages",
      notifications: "Notifications",
    },

    // Dialog titles
    dialogs: {
      accountData: "Account Data",
      changePassword: "Change Password",
    },

    // Form fields
    forms: {
      oldPassword: "Current Password",
      newPassword: "New Password",
      confirmPassword: "Confirm Password",
    },

    // Action buttons
    actions: {
      edit: "Edit",
      modify: "Modify",
      upload: "Upload",
      cancel: "Cancel",
      confirm: "Confirm",
    },

    // Status text
    status: {
      bound: "Bound",
      unbound: "Unbound",
    },

    // Security settings
    security: {
      accountPassword: "Account Password",
      passwordDesc: "Regular password changes help protect account security",
    },

    // Validation messages
    validation: {
      oldPasswordRequired: "Please enter current password",
      newPasswordRequired: "Please enter new password",
      confirmPasswordRequired: "Please confirm new password",
      passwordMismatch: "Password confirmation does not match",
    },

    // Success messages
    messages: {
      avatarUploadSuccess: "Avatar uploaded successfully",
      avatarUploadFailed: "Avatar upload failed",
      profileUpdateSuccess: "Profile updated successfully",
      passwordChangeSuccess: "Password changed successfully",
    },
  },
  // Common Translations
  common: {
    confirm: "Confirm",
    cancel: "Cancel",
    save: "Save",
    delete: "Delete",
    edit: "Edit",
    add: "Add",
    search: "Search",
    reset: "Reset",
    submit: "Submit",
    close: "Close",
    loading: "Loading...",
    noData: "No Data",
    operation: "Operation",
    status: "Status",
    createTime: "Create Time",
    updateTime: "Update Time",
    remark: "Remark",
    pleaseSelect: "Please Select",
    pleaseInput: "Please Input",
    all: "All",
    normal: "Normal",
    disabled: "Disabled",
    success: "Success",
    failed: "Failed",
  },
};
