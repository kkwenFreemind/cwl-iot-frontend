export default {
  // 菜单国际化
  route: {
    dashboard: "Dashboard",
    document: "Document",
    profile: "User Profile",
    myNotice: "My Notifications",
  },
  // Notice management internationalization
  notice: {
    title: "Notice Management",
    noticeTitle: "Title",
    noticeTitlePlaceholder: "Title",
    publishStatus: "Publish Status",
    publishStatusAll: "All",
    publishStatusUnpublished: "Unpublished",
    publishStatusPublished: "Published",
    publishStatusWithdrawn: "Withdrawn",
    addNotice: "Add Notice",
    type: "Type",
    level: "Level",
    publishTime: "Publish Time",
    targetUser: "Target User",
    table: {
      index: "No.",
      noticeTitle: "Notice Title",
      noticeType: "Notice Type",
      publisher: "Publisher",
      noticeLevel: "Notice Level",
      targetType: "Target Type",
      publishStatus: "Publish Status",
      operationTime: "Operation Time",
      operation: "Actions",
      view: "View",
      publish: "Publish",
      revoke: "Revoke",
      edit: "Edit",
      delete: "Delete",
      createTime: "Create Time",
      publishTime: "Publish Time",
      revokeTime: "Revoke Time",
      targetTypeAll: "All",
      targetTypeSpecific: "Specific",
      // Time labels
      createLabel: "Created",
      publishLabel: "Published",
      revokeLabel: "Revoked",
      title: "Title",
      type: "Type",
      status: "Status",
      content: "Content",
      level: "Priority",
      target: "Target",
      publishUser: "Publisher",
      actions: "Actions",
    },
    form: {
      createTitle: "Add Notice",
      editTitle: "Edit Notice",
      basicInfo: "Basic Info",
      targetSetting: "Target Setting",
      title: "Title",
      titlePlaceholder: "Please enter title",
      type: "Type",
      selectType: "Please select type",
      level: "Priority",
      selectLevel: "Please select priority",
      content: "Content",
      contentPlaceholder: "Please enter content",
      targetType: "Target Type",
      allUsers: "All Users",
      specificUsers: "Specific Users",
      selectUsers: "Select Users",
      selectUsersPlaceholder: "Please select users",
      submit: "Submit",
      cancel: "Cancel",
      confirm: "Confirm",
      reset: "Reset",
    },
    actions: {
      add: "Add",
      edit: "Edit",
      delete: "Delete",
      batchDelete: "Batch Delete",
      publish: "Publish",
      revoke: "Revoke",
      detail: "Detail",
      search: "Search",
      reset: "Reset",
    },
    status: {
      draft: "Draft",
      published: "Published",
      revoked: "Revoked",
      read: "Read",
      unread: "Unread",
    },
    detail: {
      title: "Notice Detail",
      basicInfo: "Basic Info",
      noticeTitle: "Title",
      noticeType: "Type",
      priority: "Priority",
      status: "Status",
      publishTime: "Publish Time",
      publishUser: "Publisher",
      targetInfo: "Target Info",
      targetType: "Target Type",
      targetUsers: "Target Users",
      content: "Content",
      close: "Close",
    },
    search: {
      title: "Title",
      titlePlaceholder: "Please enter title",
      status: "Status",
      selectStatus: "Please select status",
    },
    validation: {
      titleRequired: "Please enter title",
      contentRequired: "Please enter content",
      typeRequired: "Please select type",
    },
    messages: {
      publishSuccess: "Published successfully",
      revokeSuccess: "Revoked successfully",
      createSuccess: "Created successfully",
      updateSuccess: "Updated successfully",
      deleteSuccess: "Deleted successfully",
      selectDeleteItems: "Please select items to delete",
      confirmDelete: "Confirm delete selected items?",
      warning: "Warning",
      cancelDelete: "Delete cancelled",
      loadDetailFailed: "Failed to load notice details",
    },
  },
  // Login page internationalization
  login: {
    themeToggle: "Theme Switch",
    languageToggle: "Language Switch",
    dark: "Dark",
    light: "Light",
    username: "Username",
    password: "Password",
    login: "Login",
    captchaCode: "Verify Code",
    capsLock: "Caps Lock is On",
    rememberMe: "Remember Me",
    forgetPassword: "Forget Password?",
    validation: {
      username: {
        required: "Please enter Username",
      },
      password: {
        required: "Please enter Password",
        min: "The password can not be less than 6 digits",
        confirm: "Please confirm the password again",
        inconformity: "The two password entries are inconsistent",
      },
      captchaCode: {
        required: "Please enter Verify Code",
      },
    },
    otherLoginMethods: "Other",
    resetPassword: "Reset password",
    thinkOfPasswd: "Remember your password?",
    register: "Register account",
    agree: "I have read and agree to the",
    userAgreement: "User Agreement",
    haveAccount: "Already have an account?",
    noAccount: "Don't have an account?",
    quickFill: "Quick fill",
    reg: "Register",
  },
  // 導航欄國際化
  navbar: {
    dashboard: "Dashboard",
    logout: "Logout",
    document: "Document",
    gitee: "Gitee",
    profile: "User Profile",
    logoutConfirm: "Are you sure you want to logout and exit the system?",
    logoutConfirmTitle: "Confirm Logout",
  },
  sizeSelect: {
    tooltip: "Layout Size",
    default: "Default",
    large: "Large",
    small: "Small",
    message: {
      success: "Switch Layout Size Successful!",
    },
  },
  langSelect: {
    message: {
      success: "Switch Language Successful!",
    },
  },
  settings: {
    project: "Project Settings",
    theme: "Theme",
    interface: "Interface",
    navigation: "Navigation",
    themeColor: "Theme Color",
    showTagsView: "Show Tags View",
    showAppLogo: "Show App Logo",
    sidebarColorScheme: "Sidebar Color Scheme",
    showWatermark: "Show Watermark",
    classicBlue: "Classic Blue",
    minimalWhite: "Minimal White",
    copyConfig: "Copy Config",
    resetConfig: "Reset Default",
    copySuccess: "Configuration copied to clipboard",
    resetSuccess: "Reset to default configuration",
    copyDescription:
      "Copy config will generate current settings code, reset will restore all settings to default",
    confirmReset: "Are you sure to reset all settings to default? This operation cannot be undone.",
    applyToFile: "Apply to File",
    onlyCopy: "Only Copy",
    leftLayout: "Left Mode",
    topLayout: "Top Mode",
    mixLayout: "Mix Mode",
    configManagement: "Config Management",
    copyConfigDescription:
      "Generate current settings code and copy to clipboard, then overwrite src/settings.ts file",
    resetConfigDescription: "Restore all settings to system default values",
  },
  // User Management Internationalization
  user: {
    title: "User Management",
    keywords: "Keywords",
    keywordsPlaceholder: "Username/Nickname/Mobile",
    status: "Status",
    statusAll: "All",
    statusNormal: "Normal",
    statusDisabled: "Disabled",
    createTime: "Create Time",
    startTime: "Start Time",
    endTime: "End Time",
    search: "Search",
    reset: "Reset",
    add: "Add",
    delete: "Delete",
    import: "Import",
    export: "Export",
    username: "Username",
    nickname: "Nickname",
    gender: "Gender",
    department: "Department",
    mobile: "Mobile",
    email: "Email",
    operation: "Operation",
    resetPassword: "Reset Password",
    edit: "Edit",
    userForm: {
      title: {
        add: "Add User",
        edit: "Edit User",
      },
      username: "Username",
      usernamePlaceholder: "Please enter username",
      nickname: "Nickname",
      nicknamePlaceholder: "Please enter nickname",
      department: "Department",
      departmentPlaceholder: "Please select department",
      departmentSearchPlaceholder: "Community",
      gender: "Gender",
      role: "Role",
      rolePlaceholder: "Please select",
      mobile: "Mobile",
      mobilePlaceholder: "Please enter mobile number",
      email: "Email",
      emailPlaceholder: "Please enter email",
      status: "Status",
      confirm: "Confirm",
      cancel: "Cancel",
    },
    validation: {
      usernameRequired: "Username is required",
      nicknameRequired: "Nickname is required",
      deptRequired: "Department is required",
      roleRequired: "Role is required",
      emailInvalid: "Please enter a valid email address",
      mobileInvalid: "Please enter a valid mobile number",
    },
    resetPasswordDialog: {
      title: "Reset Password",
      prompt: "Please enter new password for user [{username}]",
      minLengthWarning: "Password must be at least 6 characters, please re-enter",
      successMessage: "Password reset successfully, new password is: {password}",
      cancelMessage: "Password reset cancelled",
    },
    deleteDialog: {
      title: "Warning",
      confirmMessage: "Are you sure to delete the user(s)?",
      noSelectionWarning: "Please select items to delete",
      successMessage: "Delete successful",
      cancelMessage: "Delete cancelled",
    },
    createSuccessMessage: "User created successfully",
    updateSuccessMessage: "User updated successfully",
    debug: {
      enable: "Enable Debug",
      disable: "Disable Debug",
      role: "Role",
      permission: "Permission",
      permissions: "permissions",
      none: "none",
    },
  },
  // Role Management Internationalization
  role: {
    title: "Role Management",
    keywords: "Keywords",
    roleName: "Role Name",
    roleNamePlaceholder: "Role Name",
    roleCode: "Role Code",
    roleCodePlaceholder: "Please enter role code",
    sort: "Sort",
    sortPlaceholder: "Please enter sort",
    dataScope: "Data Scope",
    form: {
      title: {
        add: "Add Role",
        edit: "Edit Role",
      },
      name: "Role Name",
      namePlaceholder: "Please enter role name",
      code: "Role Code",
      codePlaceholder: "Please enter role code",
      sort: "Sort",
      sortPlaceholder: "Please enter sort",
      status: "Status",
      dataScope: "Data Scope",
      remark: "Remark",
      remarkPlaceholder: "Please enter remark",
      menuPermission: "Menu Permission",
    },
    dataScopeOptions: {
      all: "All Data",
      deptAndSub: "Department and Sub-department Data",
      dept: "Department Data",
      self: "Personal Data",
    },
    assignPermission: "Assign Permission",
    validation: {
      nameRequired: "Role name is required",
      codeRequired: "Role code is required",
    },
  },
  // Department Management Internationalization
  dept: {
    title: "Community Management",
    keywords: "Keywords",
    deptName: "Community Name",
    deptNamePlaceholder: "Community Name",
    deptCode: "Community Code",
    deptCodePlaceholder: "Please enter community code",
    status: "Status",
    statusAll: "All",
    statusNormal: "Normal",
    statusDisabled: "Disabled",
    sort: "Sort",
    parentDept: "Parent Group",
    parentDeptPlaceholder: "Select parent group",
    topLevel: "Top Level Community",
    centerLatitude: "Center Latitude",
    centerLongitude: "Center Longitude",
    coordinates: "Coordinates",
    form: {
      title: {
        add: "Add Community",
        edit: "Edit Community",
      },
      parentDept: "Parent Group",
      deptName: "Community Name",
      deptNamePlaceholder: "Please enter community name",
      deptCode: "Community Code",
      deptCodePlaceholder: "Please enter community code",
      sort: "Display Sort",
      status: "Status",
      statusNormal: "Normal",
      statusDisabled: "Disabled",
      centerLatitude: "Center Latitude",
      centerLatitudePlaceholder: "Enter latitude (e.g.: 25.0330)",
      centerLongitude: "Center Longitude",
      centerLongitudePlaceholder: "Enter longitude (e.g.: 121.5654)",
      coordinatesHint: "Geographic coordinates for map positioning and area management",
    },
    validation: {
      parentDeptRequired: "Parent group is required",
      deptNameRequired: "Group name is required",
      deptCodeRequired: "Community code is required",
      sortRequired: "Display sort is required",
      centerLatitudeInvalid: "Latitude must be between -90 and 90",
      centerLongitudeInvalid: "Longitude must be between -180 and 180",
    },
    messages: {
      createSuccess: "Created successfully",
      updateSuccess: "Updated successfully",
      deleteSuccess: "Deleted successfully",
      selectDeleteItems: "Please select items to delete",
      confirmDelete: "Confirm deletion of selected items?",
      deleteConfirmTitle: "Warning",
      deleteCancelled: "Deletion cancelled",
    },
  },
  // Dictionary Management Internationalization
  dict: {
    title: "Dictionary Management",
    keywords: "Keywords",
    dictNamePlaceholder: "Dictionary name/code",
    addDict: "Add Dictionary",
    dictName: "Dictionary Name",
    dictCode: "Dictionary Code",
    status: "Status",
    statusNormal: "Enabled",
    statusDisabled: "Disabled",
    operation: "Operation",
    dictData: "Dictionary Data",
    edit: "Edit",
    delete: "Delete",
    remark: "Remark",
    form: {
      title: {
        add: "Add Dictionary",
        edit: "Edit Dictionary",
      },
      dictName: "Dictionary Name",
      dictNamePlaceholder: "Enter dictionary name",
      dictCode: "Dictionary Code",
      dictCodePlaceholder: "Enter dictionary code",
      status: "Status",
      statusNormal: "Enabled",
      statusDisabled: "Disabled",
      remark: "Remark",
      remarkPlaceholder: "Enter remark",
    },
    item: {
      title: "Dictionary Item",
      keywords: "Keywords",
      dictItemPlaceholder: "Dict label/value",
      addDictItem: "Add Item",
      dictItemLabel: "Item Label",
      dictItemValue: "Item Value",
      sort: "Sort",
      status: "Status",
      statusNormal: "Enabled",
      statusDisabled: "Disabled",
      tagType: "Tag Type",
      tagTypeTooltip: "Display style, shows 'text' when empty",
      form: {
        title: {
          add: "Add Dictionary Item",
          edit: "Edit Dictionary Item",
        },
        dictItemLabel: "Item Label",
        dictItemLabelPlaceholder: "Enter dictionary label",
        dictItemValue: "Item Value",
        dictItemValuePlaceholder: "Enter dictionary value",
        status: "Status",
        statusNormal: "Enabled",
        statusDisabled: "Disabled",
        sort: "Sort",
        tagType: "Tag Type",
        tagTypePlaceholder: "Select tag type",
      },
    },
    validation: {
      dictNameRequired: "Dictionary name is required",
      dictCodeRequired: "Dictionary code is required",
      dictItemLabelRequired: "Item label is required",
      dictItemValueRequired: "Item value is required",
    },
    messages: {
      createSuccess: "Created successfully",
      updateSuccess: "Updated successfully",
      deleteSuccess: "Deleted successfully",
      selectDeleteItems: "Please select items to delete",
      confirmDelete: "Confirm deletion of selected items?",
      deleteConfirmTitle: "Warning",
      deleteCancelled: "Deletion cancelled",
    },
  },
  // System Log Management Internationalization
  log: {
    title: "System Logs",
    keywords: "Keywords",
    keywordsPlaceholder: "Log content",
    logContent: "Log Content",
    operationTime: "Operation Time",
    startTime: "Start Time",
    endTime: "End Time",
    search: "Search",
    reset: "Reset",
    export: "Export",
    table: {
      operator: "Operator",
      module: "Log Module",
      ipAddress: "IP Address",
      operationContent: "Operation",
      operationTime: "Time",
      operation: "Actions",
      view: "View",
      region: "Region",
      browser: "Browser",
      os: "OS",
      executionTime: "Execution Time(ms)",
    },
    form: {
      logDetails: "Log Details",
      basicInfo: "Basic Info",
      requestInfo: "Request Info",
      responseInfo: "Response Info",
      operator: "Operator",
      module: "Module",
      description: "Description",
      requestUri: "Request URI",
      requestMethod: "Method",
      methodParams: "Parameters",
      userAgent: "User Agent",
      ipAddress: "IP Address",
      province: "Province",
      city: "City",
      browserName: "Browser",
      browserVersion: "Version",
      osName: "OS",
      osArch: "Architecture",
      executionTime: "Execution Time",
      startTime: "Start Time",
      endTime: "End Time",
      responseStatus: "Status",
      errorMessage: "Error",
      noData: "No data",
    },
    messages: {
      exportSuccess: "Export successful",
      exportFailed: "Export failed",
      deleteSuccess: "Deleted successfully",
      selectDeleteItems: "Please select items to delete",
      confirmDelete: "Confirm deletion of selected logs?",
      deleteConfirmTitle: "Warning",
      deleteCancelled: "Deletion cancelled",
    },
  },
  // System Configuration Management Internationalization
  config: {
    title: "System Config",
    keywords: "Keywords",
    keywordsPlaceholder: "Config key/name",
    search: "Search",
    reset: "Reset",
    addConfig: "Add",
    refreshCache: "Refresh Cache",
    table: {
      index: "No.",
      configName: "Config Name",
      configKey: "Config Key",
      configValue: "Config Value",
      remark: "Description",
      operation: "Actions",
      edit: "Edit",
      delete: "Delete",
    },
    form: {
      title: {
        add: "Add System Config",
        edit: "Edit System Config",
      },
      configName: "Config Name",
      configNamePlaceholder: "Enter config name",
      configKey: "Config Key",
      configKeyPlaceholder: "Enter config key",
      configValue: "Config Value",
      configValuePlaceholder: "Enter config value",
      remark: "Description",
      remarkPlaceholder: "Enter description",
      confirm: "Confirm",
      cancel: "Cancel",
    },
    validation: {
      configNameRequired: "Config name is required",
      configKeyRequired: "Config key is required",
      configValueRequired: "Config value is required",
    },
    messages: {
      refreshCacheSuccess: "Cache refreshed successfully",
      createSuccess: "Created successfully",
      updateSuccess: "Updated successfully",
      deleteSuccess: "Deleted successfully",
      confirmDelete: "Confirm deletion of this configuration?",
      deleteConfirmTitle: "Warning",
      deleteCancelled: "Deletion cancelled",
    },
  },
  // Menu Management Internationalization
  menu: {
    title: "Menu Management",
    keywords: "Keywords",
    menuName: "Menu Name",
    menuNamePlaceholder: "Menu Name",
    menuType: "Menu Type",
    parentMenu: "Parent Menu",
    routeName: "Route Name",
    component: "Component Path",
    path: "Route Path",
    perms: "Permission",
    visible: "Visible",
    redirect: "Redirect",
    sort: "Sort",
    icon: "Icon",
    form: {
      title: "Add Menu",
      editTitle: "Edit Menu",
      name: "Menu Name",
      namePlaceholder: "Please enter menu name",
      parentId: "Parent Menu",
      parentPlaceholder: "Select parent menu",
      menuType: "Menu Type",
      extLinkPath: "External Link",
      extLinkPlaceholder: "Please enter external link URL",
      routeName: "Route Name",
      routeNamePlaceholder: "User",
      routeNameTooltip:
        "If caching is needed, ensure the page defineOptions name matches this field, use camelCase.",
      routePath: "Route Path",
      directoryPlaceholder: "system",
      menuPlaceholder: "user",
      routePathTooltip:
        "Define URL paths for different pages. Directories need to start with /, menu items don't. Example: System directory /system, User menu under system management is user.",
      component: "Component Path",
      componentPlaceholder: "system/user/index",
      componentTooltip:
        "Complete component page path relative to src/views/, e.g. system/user/index, default suffix .vue",
      routeParams: "Route Parameters",
      routeParamsTooltip:
        "Component pages use `useRoute().query.paramName` to get route parameter values.",
      addRouteParam: "Add Route Parameter",
      paramName: "Parameter Name",
      paramValue: "Parameter Value",
      visible: "Visible Status",
      alwaysShow: "Always Show",
      alwaysShowTooltip:
        "Select 'Yes' to show parent node even if directory or menu has only one child. Select 'No' to show only the child node and hide parent if there's only one child. For leaf nodes, select 'No'.",
      keepAlive: "Keep Alive",
      sort: "Sort",
      permission: "Permission",
      permissionPlaceholder: "sys:user:add",
      icon: "Icon",
      redirect: "Redirect",
      redirectPlaceholder: "Redirect path",
      path: "Route Path",
      pathPlaceholder: "Please enter route path",
      perms: "Permission",
      permsPlaceholder: "Please enter permission",
      sortPlaceholder: "Please enter sort",
      iconPlaceholder: "Please select icon",
    },
    menuTypes: {
      directory: "Directory",
      menu: "Menu",
      button: "Button",
      extlink: "External Link",
    },
    visibleStatus: {
      show: "Show",
      hide: "Hide",
    },
    options: {
      yes: "Yes",
      no: "No",
      enable: "Enable",
      disable: "Disable",
    },
    validation: {
      parentRequired: "Please select parent menu",
      nameRequired: "Menu name is required",
      typeRequired: "Please select menu type",
      routeNameRequired: "Please enter route name",
      pathRequired: "Route path is required",
      componentRequired: "Component path is required",
      visibleRequired: "Please select visible status",
      permsRequired: "Permission is required",
    },
  },
  // Profile Internationalization
  profile: {
    title: "User Profile",
    accountInfo: "Account Information",
    securitySettings: "Security Settings",
    personalInfo: "Personal Information",
    avatar: "Avatar",
    nickname: "Nickname",
    username: "Username",
    mobile: "Mobile",
    email: "Email",
    department: "Community",
    createTime: "Create Time",
    gender: "Gender",
    role: "Role",

    // Statistics
    stats: {
      todos: "Todos",
      messages: "Messages",
      notifications: "Notifications",
    },

    // Dialog titles
    dialogs: {
      accountData: "Account Data",
      changePassword: "Change Password",
    },

    // Form fields
    forms: {
      oldPassword: "Current Password",
      newPassword: "New Password",
      confirmPassword: "Confirm Password",
    },

    // Action buttons
    actions: {
      edit: "Edit",
      modify: "Modify",
      upload: "Upload",
      cancel: "Cancel",
      confirm: "Confirm",
    },

    // Status text
    status: {
      bound: "Bound",
      unbound: "Unbound",
    },

    // Security settings
    security: {
      accountPassword: "Account Password",
      passwordDesc: "Regular password changes help protect account security",
    },

    // Validation messages
    validation: {
      oldPasswordRequired: "Please enter current password",
      newPasswordRequired: "Please enter new password",
      confirmPasswordRequired: "Please confirm new password",
      passwordMismatch: "Password confirmation does not match",
    },

    // Success messages
    messages: {
      avatarUploadSuccess: "Avatar uploaded successfully",
      avatarUploadFailed: "Avatar upload failed",
      profileUpdateSuccess: "Profile updated successfully",
      passwordChangeSuccess: "Password changed successfully",
    },
  },
  // Common Translations
  common: {
    confirm: "Confirm",
    cancel: "Cancel",
    save: "Save",
    delete: "Delete",
    edit: "Edit",
    add: "Add",
    search: "Search",
    reset: "Reset",
    submit: "Submit",
    close: "Close",
    loading: "Loading...",
    noData: "No Data",
    operation: "Operation",
    status: "Status",
    serialNumber: "Serial Number",
    createTime: "Create Time",
    updateTime: "Update Time",
    remark: "Remark",
    pleaseSelect: "Please Select",
    pleaseInput: "Please Input",
    all: "All",
    normal: "Normal",
    disabled: "Disabled",
    success: "Success",
    failed: "Failed",
  },

  // Device Management Internationalization
  device: {
    title: "Device Management",
    keywords: "Keywords",
    keywordsPlaceholder: "Device Name/Model/Serial",
    status: "Status",
    statusAll: "All",
    statusActive: "Active",
    statusInactive: "Inactive",
    statusDisabled: "Disabled",
    active: "Active",
    inactive: "Inactive",
    disabled: "Disabled",
    deviceName: "Device Name",
    deviceId: "Device ID",
    deviceModel: "Device Model",
    deviceType: "Device Type",
    deviceTypeAll: "All Types",
    waterLevelSensor: "Water Level Sensor",
    otherDevice: "Other Device",
    serialNumber: "Serial Number",
    department: "Department",
    location: "Location",
    createTime: "Create Time",
    manufacturer: "Manufacturer",
    installDate: "Install Date",
    lastSeen: "Last Seen",
    operation: "Operations",
    search: "Search",
    reset: "Reset",
    add: "Add Device",
    edit: "Edit",
    detail: "Detail",
    delete: "Delete",
    online: "Online",
    offline: "Offline",
    heartbeat: "Heartbeat",
    maintenance: "Maintenance",
    warranty: "Warranty",

    // Device Form
    deviceForm: {
      title: {
        add: "Add Device",
        edit: "Edit Device",
      },
      deviceName: "Device Name",
      deviceModel: "Device Model",
      deviceType: "Device Type",
      deviceTypePlaceholder: "Select device type",
      serialNumber: "Serial Number",
      description: "Description",
      status: "Status",
      department: "Department",
      location: "Location",
      latitude: "Latitude",
      longitude: "Longitude",
      installDate: "Install Date",
      lastMaintenanceDate: "Last Maintenance",
      nextMaintenanceDate: "Next Maintenance",
      firmwareVersion: "Firmware Version",
      hardwareVersion: "Hardware Version",
      manufacturer: "Manufacturer",
      purchasePrice: "Purchase Price",
      warrantyExpiry: "Warranty Expiry",
      specifications: "Specifications",
      confirm: "Confirm",
      cancel: "Cancel",

      // Placeholders
      deviceNamePlaceholder: "Enter device name",
      deviceModelPlaceholder: "Enter device model",
      serialNumberPlaceholder: "Enter serial number",
      descriptionPlaceholder: "Enter device description",
      departmentPlaceholder: "Select department",
      locationPlaceholder: "Enter installation location",
      manufacturerPlaceholder: "Enter manufacturer",
    },

    // Validation Messages
    validation: {
      deviceNameRequired: "Device name is required",
      deviceModelRequired: "Device model is required",
      deviceTypeRequired: "Device type is required",
      serialNumberRequired: "Serial number is required",
      deptRequired: "Department is required",
      locationRequired: "Location is required",
      serialNumberExists: "Serial number already exists",
    },

    // Status Updates
    statusUpdate: {
      title: "Device Status Update",
      confirmActive: "Are you sure you want to activate this device?",
      confirmInactive: "Are you sure you want to deactivate this device?",
      confirmDisabled: "Are you sure you want to disable this device?",
      success: "Device status updated successfully",
      failed: "Failed to update device status",
    },

    // Delete Confirmation
    deleteDialog: {
      title: "Delete Confirmation",
      confirmMessage: "This will permanently delete the device. Continue?",
      successMessage: "Device deleted successfully",
      cancelMessage: "Delete cancelled",
      noSelectionWarning: "Please select devices to delete",
    },

    // Success Messages
    createSuccessMessage: "Device created successfully",
    updateSuccessMessage: "Device updated successfully",

    // Error Messages
    loadError: "Failed to load device details",
    deviceNotFound: "Device not found",
    fetchError: "Failed to fetch devices",
    saveError: "Failed to save device",
    deleteError: "Failed to delete device",
    heartbeatUpdateError: "Failed to update heartbeat",
    selectDevicesToDelete: "Please select devices to delete",
    deleteConfirmation: "This will permanently delete the selected device(s). Continue?",
    deleteTitle: "Delete Confirmation",
    deleteSuccess: "Device(s) deleted successfully",
    updateSuccess: "Device updated successfully",
    addSuccess: "Device added successfully",
    heartbeatUpdateSuccess: "Heartbeat updated successfully",

    // Statistics Panel
    stats: {
      totalDevices: "Total Devices",
      activeDevices: "Active Devices",
      inactiveDevices: "Inactive Devices",
      disabledDevices: "Disabled Devices",
      onlineDevices: "Online Devices",
      offlineDevices: "Offline Devices",
      maintenanceDue: "Maintenance Due",
      warrantyExpiring: "Warranty Expiring",
    },

    // Spatial Queries
    spatial: {
      withinRadius: "Within Radius",
      nearest: "Nearest Devices",
      radiusKm: "Radius (km)",
      centerLocation: "Center Location",
    },

    // Device Actions
    actions: {
      viewDetails: "View Details",
      updateStatus: "Update Status",
      updateHeartbeat: "Update Heartbeat",
      scheduleMaintenance: "Schedule Maintenance",
      viewLocation: "View Location",
      exportData: "Export Data",
    },

    // Filters
    filters: {
      department: "All Departments",
      model: "Device Model",
      location: "Location",
    },

    // EMQX Configuration
    emqx: {
      configTitle: "Device EMQX Configuration Details",
      modalTitle: "Device EMQX Configuration",
      deviceId: "Device ID",
      mqttClientId: "MQTT Client ID",
      emqxUsername: "EMQX Username",
      emqxPassword: "EMQX Password",
      telemetryTopic: "Telemetry Topic",
      commandTopic: "Command Topic",
      getConfigError: "Failed to get EMQX configuration",
      unknownError: "Unknown error",
      invalidResponse: "API returned invalid response",
      unrecognizedFormat: "API response format cannot be recognized",
      createConfigWarning:
        "Device created successfully, but EMQX configuration failed. Please contact administrator.",
      deleteConfigWarning:
        "Device deleted successfully, but EMQX configuration cleanup failed. Please contact administrator.",
    },

    // General Error Messages
    errors: {
      fetchDataFailed: "Failed to fetch data",
      saveFailed: "Save failed",
      deleteFailed: "Delete failed",
      apiError: "API error",
    },
  },
  // IoT Metric Definition Management
  metric: {
    // Basic operations
    add: "Add Metric",
    edit: "Edit",
    delete: "Delete",
    search: "Search",
    reset: "Reset",
    confirm: "Confirm",
    cancel: "Cancel",
    alias: "Alias",
    keyword: "Keyword",
    keywordPlaceholder: "Metric Name",
    isActive: "Active?",
    createdAt: "CreateTime",
    operation: "Operater",
    // Titles
    addMetric: "Add Metric Definition",
    editMetric: "Edit Metric Definition",
    metricManagement: "Metric Definition Management",

    // Search and filters
    keywords: "Keywords",
    keywordsPlaceholder: "Enter metric name or alias",
    metricName: "Metric Name",
    physicalQuantity: "Physical Quantity",
    physicalQuantityAll: "All Physical Quantities",
    dataType: "Data Type",
    dataTypeAll: "All Data Types",
    deptName: "Department Name",
    status: "Status",
    range: "Value Range",
    unit: "Unit",

    // Physical quantity types
    length: "Length",
    mass: "Mass",
    temperature: "Temperature",
    pressure: "Pressure",
    volume: "Volume",
    flow: "Flow",
    velocity: "Velocity",
    power: "Power",
    energy: "Energy",
    time: "Time",
    frequency: "Frequency",
    electricCurrent: "Electric Current",
    voltage: "Voltage",
    resistance: "Resistance",
    conductance: "Conductance",
    capacitance: "Capacitance",
    inductance: "Inductance",
    magneticFlux: "Magnetic Flux",
    luminousIntensity: "Luminous Intensity",
    illuminance: "Illuminance",
    radioactivity: "Radioactivity",
    angle: "Angle",
    area: "Area",
    dimensionless: "Dimensionless",

    // Units
    meter: "Meter",
    kilometer: "Kilometer",
    centimeter: "Centimeter",
    millimeter: "Millimeter",
    kilogram: "Kilogram",
    gram: "Gram",
    ton: "Ton",
    celsius: "Celsius",
    fahrenheit: "Fahrenheit",
    kelvin: "Kelvin",
    second: "Second",
    minute: "Minute",
    hour: "Hour",
    day: "Day",
    percent: "Percent",
    volt: "Volt",
    dbm: "dBm",
    litersPerMinute: "Liters/Minute",
    waterLevel: "Water Level",
    signalStrength: "Signal Strength",

    // Data types
    integer: "Integer",
    float: "Float",
    double: "Double",
    boolean: "Boolean",
    string: "String",
    timestamp: "Timestamp",

    // Status
    active: "Active",
    inactive: "Inactive",
    noRange: "No Range Limit",

    // Actions
    actions: "Actions",

    // Form fields
    metricForm: {
      metricName: "Metric Name",
      metricNamePlaceholder: "Enter metric name",
      alias: "Alias",
      aliasPlaceholder: "Enter metric alias (optional)",
      physicalQuantity: "Physical Quantity",
      physicalQuantityPlaceholder: "Select physical quantity type",
      unit: "Unit",
      unitPlaceholder: "Select measurement unit",
      dataType: "Data Type",
      dataTypePlaceholder: "Select data type",
      minValue: "Minimum Value",
      minValuePlaceholder: "Enter minimum value",
      maxValue: "Maximum Value",
      maxValuePlaceholder: "Enter maximum value",
      precision: "Precision",
      precisionPlaceholder: "Enter decimal places",
      description: "Description",
      descriptionPlaceholder: "Enter metric description (optional)",
    },

    // Validation messages
    validation: {
      metricNameRequired: "Metric name is required",
      physicalQuantityRequired: "Please select physical quantity",
      unitRequired: "Please select unit",
      dataTypeRequired: "Please select data type",
    },

    // Success messages
    createSuccess: "Metric definition created successfully",
    updateSuccess: "Metric definition updated successfully",
    deleteSuccess: "Metric definition deleted successfully",

    // Error messages
    fetchError: "Failed to fetch metric definitions",
    submitError: "Submission failed",
    deleteError: "Deletion failed",

    // Confirmation dialogs
    confirmDelete:
      "Are you sure you want to delete the selected metric definition? This action cannot be undone.",
    confirmDeleteTitle: "Delete Confirmation",

    // Prompts
    selectDeptFirst: "Please select a department first",
    noData: "No data",
  },

  // Electronic Map Internationalization
  emap: {
    centerOnDevices: "Center on Devices",
    zoomIn: "Zoom In",
    zoomOut: "Zoom Out",
    myLocation: "My Location",
    initMapFailed: "Failed to initialize map",
    locationSuccess: "Location updated successfully",
    locationFailed: "Failed to get location",
    geolocationNotSupported: "Geolocation is not supported by this browser",
  },
};
